[{"F:\\Box Sync\\study\\udemy\\React\\react-hooks-101\\src\\App.js":"1","F:\\Box Sync\\study\\udemy\\React\\react-hooks-101\\src\\index.js":"2"},{"size":963,"mtime":1608774557933,"results":"3","hashOfConfig":"4"},{"size":193,"mtime":1608602494285,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"8"},"1kubj2z",{"filePath":"9","messages":"10","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\Box Sync\\study\\udemy\\React\\react-hooks-101\\src\\App.js",["11"],"import { render } from '@testing-library/react'\nimport React, { useEffect, useState } from 'react'\n\nconst App = props => {\n  const [state, setState] = useState(props)\n  const { name, price } = state\n  \n  useEffect(() => {\n    console.log('This is like componentDidMount or componentDidUpdate.')\n  })\n  \n  useEffect(() => {\n    console.log('This is like componentDidMount')\n  }, [])\n  \n  useEffect(() => {\n    console.log('This callback is for name only.')\n  }, [name])\n  \n  return (\n    <>\n      <p>\n        現在の{name}は、{price}円です。\n      </p>\n      <button onClick={() => setState({ ...state, price: price + 1 })}>+1</button>\n      <button onClick={() => setState({ ...state, price: price - 1 })}>-1</button>\n      <button onClick={() => setState(props)}>Reset</button>\n      <input value={name} onChange={(e) => setState({ ...state, name: e.target.value })} />\n    </>\n  )\n}\n\nApp.defaultProps = {\n  name: '',\n  price: 1000\n}\n\nexport default App\n","F:\\Box Sync\\study\\udemy\\React\\react-hooks-101\\src\\index.js",[],{"ruleId":"12","severity":1,"message":"13","line":1,"column":10,"nodeType":"14","messageId":"15","endLine":1,"endColumn":16},"no-unused-vars","'render' is defined but never used.","Identifier","unusedVar"]